
#include <VirtualWire.h>
#define MQ2_pin A0

const int led_pin = 12;
const int transmit_pin = 11;
char str1[2];
char node[3] = "01"; // node number. change this node number for
char trnsmit_str[4];// different node
void setup()
{
    vw_set_tx_pin(transmit_pin);    
    vw_set_ptt_inverted(true); 		
    vw_setup(2000);       			// Bits per sec
    Serial.begin(9600);    
    pinMode(led_pin, OUTPUT);
}
void loop()
{
  int gas,gas_level;
  gas=analogRead(MQ2_pin);	  
  gas_level=map(gas,0,1023,0,99);		// map them in the range between 0 to 99% 
  Serial.println("Node 1");		// serially print all values
  Serial.print("gas level: ");		// for debugging
  Serial.print(gas_level);
  Serial.println(" %"); 
  digitalWrite(led_pin, HIGH); 		// Flash a light to show transmitting
  itoa(gas_level,str1,10);			// convert all 2 digit values into 
  strcpy(trnsmit_str,node);		// one string
  strcat(trnsmit_str,str1);
  Serial.print("transmitted string: ");
  Serial.println(trnsmit_str);
  vw_send((uint8_t *)trnsmit_str, 4);
  vw_wait_tx(); 				// Wait until the whole message is gone
  digitalWrite(led_pin, LOW);
  delay(5000);  
}

Receiver program for 2 nodes:
#include <VirtualWire.h>
#define gas_threshold 80
#define siren 7
const int receive_pin = 12; 
int led = 10,gas_level;
void setup() 
{
  Serial.begin(9600);                 	// setup serial communication
  vw_set_rx_pin(receive_pin);
  vw_set_ptt_inverted(true);          
  vw_setup(2000);                     	// wireless data rate
  vw_rx_start();                   	// Start the receiver PLL running
  pinMode(led,OUTPUT); 
  pinMode(siren,OUTPUT);   
  digitalWrite(led,LOW);
  digitalWrite(siren,LOW);
  delay(1000);
  Serial.println("Receiving sensor DATA from all nodes....."); 
}
void loop() 
{
   uint8_t buf[VW_MAX_MESSAGE_LEN];
   uint8_t buflen = VW_MAX_MESSAGE_LEN;
   int i;  
   if (vw_get_message(buf, &buflen)) 	// when msg is received
     {
        digitalWrite(led,HIGH);
        if(buf[1]=='1')			// check node number
        {  
          Serial.println("Node 1");	// print node number and
          Serial.print("gas level: "); 	// all sensor values
          for (i = 2; i < 4; i++) Serial.print(buf[i]-48);             
          Serial.println(" %"); 
		gas_level = (buf[2]-48)*10 + (buf[3]-48)*1;
           if(gas_level>gas_threshold) digitalWrite(siren,HIGH);          
           else digitalWrite(siren,LOW);   
         } 
      else if(buf[1]=='2')
        {  
          Serial.println("Node 2");
          Serial.print("Gas Level: "); 
          for (i = 2; i < 4; i++) Serial.print(buf[i]-48);             
          Serial.println(" %");
          gas_level = (buf[2]-48)*10 + (buf[3]-48)*1;
           if(gas_level>gas_threshold) digitalWrite(siren,HIGH); 
          else digitalWrite(siren,LOW);                  
       } 
     }
  }

